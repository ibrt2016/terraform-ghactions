# This is a basic workflow to help you get started with Actions

name: Terrafrom GithubActions Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: "48a8cec5-1459-441a-816e-db78c8cccec9"
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: "3005d717-8f23-45e2-b8ee-daf5409c2b81"
      ARM_TENANT_ID: "d81edcfa-5f16-433a-9e99-122d86ee2141"
      AZURE_STORAGE: "terraformdemo243384934"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Runs a single command using the runners shell
      - name: Buils Terrafrom State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        
      - name: Terraform init
        run: terraform init -backend-config="storage_account_name=${{ env.AZURE_STORAGE }}"
        
      - name: Terraform plan
        run: terraform plan -out=tfplan
        
      - name: Terraform apply
        run: terraform apply tflplan
